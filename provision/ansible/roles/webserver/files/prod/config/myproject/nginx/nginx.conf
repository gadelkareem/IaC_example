
user  www-data  www-data;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /run/nginx.pid;

worker_rlimit_nofile 65535;

events {
    #1024 - 51200 - 500000
    worker_connections  4096;
    # use [ kqueue | rtsig | epoll | /dev/poll | select | poll ] ;
    ## epoll is preferred on 2.6 Linux
    use epoll;
    ## Accept as many connections as possible.
    multi_accept on;
}

http {
    ## MIME types.
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    ## Default log format
    log_format main escape=json  '{ "time": "$time_iso8601", "remote_addr": "$remote_addr", "remote_user": "$remote_user", "body_bytes_sent": "$body_bytes_sent", "request_time": "$request_time", "status": "$status", "request_method": "$request_method","request": "$request", "host": "$host" , "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent"}';

    ## Use sendfile() syscall to speed up I/O operations and speed up
    ## static file serving.
    sendfile        on;


    ## Timeouts
    client_body_timeout        30;
    client_header_timeout     30;
    keepalive_timeout      60 60;
    keepalive_requests      200;
    send_timeout                  60;

    ## Reset lingering timed out connections. Deflect DDoS.
    reset_timedout_connection on;

    ## Body size.
    client_max_body_size 10m;

    ## TCP options.
    tcp_nodelay on;
    ## Optimization of socket handling when using sendfile.
    tcp_nopush on;

    ## Compression. https://wiki.nginx.org/NginxHttpGzipModule
    gzip              on;
    gzip_buffers      16 8k;
    gzip_min_length  60;
    gzip_comp_level   7;  #1-9
    gzip_http_version 1.1;
    gzip_types        text/plain application/json text/css text/x-component application/x-javascript application/javascript text/javascript text/x-js text/richtext image/svg+xml text/xml application/xml application/xml+rss image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf text/xsd text/xsl;
    gzip_vary         on;
    gzip_proxied      any; # Compression for all requests.
    ## No need for regexps. See
    ## https://wiki.nginx.org/NginxHttpGzipModule#gzip_disable
    gzip_disable "msie6";

    ## Serve already compressed files directly, bypassing on-the-fly
    ## compression.
    gzip_static on;

    ## Hide the Nginx version number.
    server_tokens off;

    ## Use a SSL/TLS cache for SSL session resume. This needs to be
    ## here (in this context, for session resumption to work. See this
    ## thread on the Nginx mailing list:
    ## https://nginx.org/pipermail/nginx/2010-November/023736.html.
    #ssl_session_cache shared:SSL:10m;
    #ssl_session_timeout 10m;

    #https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-with-http-2-support-on-ubuntu-16-04
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    ## Enable clickjacking protection in modern browsers. Available in
    ## IE8 also. See
    ## https://developer.mozilla.org/en/The_X-FRAME-OPTIONS_response_header
    add_header X-Frame-Options sameorigin;

    add_header X-XSS-Protection "1; mode=block";

    ## Handling of IPs in proxied and load balancing situations.
    # https://www.cloudflare.com/ips/
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/12;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;
    # the ip is forwarded from the load balancer/proxy
    #real_ip_header CF-Connecting-IP;
    real_ip_header X-Forwarded-For;

    ignore_invalid_headers  on;

    geo $limited {
        default 1;
        127.0.0.1 0;
        #include /etc/nginx/whitelist_ips;
    }

    map $limited $limit {
        1        $binary_remote_addr;
        0        "";
    }

    #https://gadelkareem.com/2012/03/25/limit-requests-per-ip-on-nginx-using-httplimitzonemodule-and-httplimitreqmodule-except-whitelist/
    #https://wiki.nginx.org/HttpLimitConnModule
    #concurrent connections
    limit_conn_zone  $limit  zone=concurrent:10m;
    limit_conn_log_level warn;
    limit_conn  concurrent  200;


    #https://gadelkareem.com/2015/01/18/limiting-connections-requests-wordpress-nginx/
    #https://wiki.nginx.org/HttpLimitReqModule
    #default serve zone
    limit_req_zone $limit zone=php:10m rate=50r/s;
    #search zone
    #limit_req_zone $limit zone=search:10m rate=100r/m;
    #login zone
    limit_req_zone $limit zone=login:10m rate=2r/s;

    limit_req_log_level  warn;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _ example.com *.example.com;

        charset utf-8;

        set $different_host 0;
        if ($host != 'www.example.com') {
           set $different_host 1;
        }

        if ($limited = 0){
           set $different_host 0;
        }

        if ($different_host = 1){
           rewrite  ^/(.*)$  $scheme://www.example.com/$1  permanent;
        }


        root  /var/www/application/sites/example.com/public;
        index  index.html index.htm index.php;

        access_log /var/log/nginx/access.log main;

        # Rules to block unneeded HTTP methods
        if ($request_method !~ ^(GET|POST|OPTIONS|HEAD|PUT|DELETE|PATCH)$ ){
            return 444;
        }

        error_page 440 = @secure;

        location @secure {
            deny all;
        }

        #deny hidden parts
        location ~ /\. {
            return 440;
        }

        location /nginx_stub_status {
          stub_status on;
          if ($limited = 1){
                 return 440;
          }
        }

        location / {
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$) {
            limit_req zone=php burst=50;
            include /etc/nginx/fastcgi_params;
            internal;
        }

       # return 404 for all other php files not matching the front controller
       # this prevents access to other php files you don't want to be accessible.
       location ~ \.php$ {
         return 404;
       }

        # Do not log images ico and txt requests
        location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|txt|ogg|pdf|pptx?|woff)$ {
            expires max;
            log_not_found off;
            access_log off;
            tcp_nodelay off;
            ## Set the OS file cache.
            open_file_cache max=1000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;
            add_header Pragma public;
            add_header Cache-Control "public";
        }
    }

}
